[
    {
        "sites": [
            "reddit"
        ],
        "task_id": 0,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "The person in the video {description}. Can you {description2}?",
        "intent": "The person in the video mentions they are working at a certain company. Can you search for the company and take me to the comments section of the first post that comes up?",
        "intermediate_intent": "What company did the person in the video say they are working for?",
        "video": "go_to_comments",
        "instantiation_dict": {
            "description": "mentions they are working at a certain company",
            "description2": "search for the company and take me to the comments section of the first post that comes up"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Microsoft"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/f/gaming/83733/how-come-nintendo-can-be-extremely-anti-consumer-and-get",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "medium",
        "visual_reasoning": false,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 0
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 1,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you leave a comment {description}?",
        "intent": "Can you leave a comment stating 'I want to visit!' replying to all the comments in the video that had 4 upvotes?",
        "intermediate_intent": "What are the username(s) of the author(s) who wrote the comment(s) in the video that had 4 upvotes?",
        "video": "go_to_comments",
        "instantiation_dict": {
            "description": "stating 'I want to visit!' replying to all the comments in the video that had 4 upvotes"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Candid-Mine5119"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/Washington/37077/eatonville-view",
                    "locator": "func:reddit_get_parent_comment_username_of_latest_comment_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "Candid-Mine5119"
                    }
                },
                {
                    "url": "__REDDIT__/f/Washington/37077/eatonville-view",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "I want to visit!"
                    }
                }
            ]
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "hard",
        "visual_reasoning": false,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 1
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 2,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you upvote all the posts {description}?.",
        "intent": "Can you upvote all the posts in the video with sunsets in their image?.",
        "intermediate_intent": "What are the names of the posts in the video with sunsets in their image?",
        "video": "go_to_comments",
        "instantiation_dict": {
            "description": "in the video with sunsets in their image"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "As an Oregonian, I'm biased\u2026but DAMN Seattle was gorgeous last night.",
                    "Seattle, WA December/2022",
                    "Eatonville view"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/Washington/37077/eatonville-view",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-upvoted"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/Washington/58165/seattle-wa-december-2022",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-upvoted"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/Washington/122910/as-an-oregonian-i-m-biased-but-damn-seattle-was-gorgeous",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-upvoted"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 2
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 3,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Take me to {description}.",
        "intent": "Take me to the page for the first comment the person in the video made.",
        "intermediate_intent": "What was the content of the first comment the person in the video made?",
        "video": "go_to_comments",
        "instantiation_dict": {
            "description": "the page for the first comment the person in the video made"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "I think this is great too!"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__SHOPPING__/f/Washington/37077/eatonville-view/linear",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 3
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 4,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "The person in the video {description}. Can you {description2}.",
        "intent": "The person in the video mentions they are visiting a certain landmark in the next month. Can you take me to the comments for a post on the website showing the landmark rainbow colored.",
        "intermediate_intent": "What landmark did the person say they are visiting in the next month?",
        "video": "sort_and_go_to_comments",
        "instantiation_dict": {
            "description": "mentions they are visiting a certain landmark in the next month",
            "description2": "take me to the comments for a post on the website showing the landmark rainbow colored"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "white house"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__SHOPPING__/f/pics/67333/the-white-house-tonight",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": true,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 4
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 5,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you leave a comment {description}.",
        "intent": "Can you leave a comment on the post with the most upvotes in the video and state 'wow this is popular it has {x} upvotes!' where x is the number of upvotes it has.",
        "intermediate_intent": "What was the name of the post with the most upvotes int ?",
        "video": "sort_and_go_to_comments",
        "instantiation_dict": {
            "description": "on the post with the most upvotes in the video and state 'wow this is popular it has {x} upvotes!' where x is the number of upvotes it has"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "[I ate] Maple Pecan Croissant"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/food/18823/i-ate-maple-pecan-croissant",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "'wow this is popular it has 11578 upvotes!"
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 5
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 6,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Take me to {description}.",
        "intent": "Take me to the author page of the user who had the most popular post of all time in the first forum the person in the video visited.",
        "intermediate_intent": "What was the name of user who had the most popular post of all time in the first forum the person in the video visited?",
        "video": "sort_and_go_to_comments",
        "instantiation_dict": {
            "description": "the author page of the user who had the most popular post of all time in the first forum the person in the video visited"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Swarmin_Swedes"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__SHOPPING__/user/Swarmin_Swedes",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 3
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 7,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "I recall {description}. Can you {description2}?",
        "intent": "I recall seeing a post with an ambulance as a picture in the video. Can you take me to the comments section of this post??",
        "intermediate_intent": "What was the name of the post with an ambulance as a picture in the video?",
        "video": "sort_and_go_to_comments",
        "instantiation_dict": {
            "description": "seeing a post with an ambulance as a picture in the video",
            "description2": "take me to the comments section of this post?"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Chick-delayed"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__SHOPPING__/f/washingtondc/136747/chick-delayed",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 6
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 8,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "I recall {description}. Can you {description2}?",
        "intent": "I recall seeing a post with a frog in the picture in the video. Can you take me to the comments section of this post??",
        "intermediate_intent": "What was the name of the post with a frog in the picture in the video?",
        "video": "time_and_comment",
        "instantiation_dict": {
            "description": "seeing a post with a frog in the picture in the video",
            "description2": "take me to the comments section of this post?"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Sometimes, we just need to hear this."
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__SHOPPING__/f/MechanicalKeyboards/121091/sometimes-we-just-need-to-hear-this",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 6
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 9,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you upvote all the posts {description}?",
        "intent": "Can you upvote all the posts where the person in the video highlighted the time it was posted?",
        "intermediate_intent": "What are the names of all the posts the person in the video highlighted the time it was posted?",
        "video": "time_and_comment",
        "instantiation_dict": {
            "description": "where the person in the video highlighted the time it was posted"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "You heard the brain",
                    "I don't know why I'm like this",
                    "nobody asked",
                    "It is so true..."
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "program_html": [
            {
                "url": "__REDDIT__/f/MechanicalKeyboards/78235/you-heard-the-brain",
                "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                "required_contents": {
                    "must_include": [
                        "vote vote--user-upvoted"
                    ]
                }
            },
            {
                "url": "__REDDIT__/f/MechanicalKeyboards/78288/i-don-t-know-why-i-m-like-this",
                "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                "required_contents": {
                    "must_include": [
                        "vote vote--user-upvoted"
                    ]
                }
            },
            {
                "url": "__REDDIT__/f/MechanicalKeyboards/56381/nobody-asked",
                "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                "required_contents": {
                    "must_include": [
                        "vote vote--user-upvoted"
                    ]
                }
            },
            {
                "url": "__REDDIT__/f/MechanicalKeyboards/35118/it-is-so-true",
                "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                "required_contents": {
                    "must_include": [
                        "vote vote--user-upvoted"
                    ]
                }
            }
        ],
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 7
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 10,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Take me to {description}.",
        "intent": "Take me to the exact page when the person in the video says they sorted the comments by time..",
        "intermediate_intent": "What was the name of the post the person in the video is on when they said they sorted the comments by time.",
        "video": "time_and_comment",
        "instantiation_dict": {
            "description": "the exact page when the person in the video says they sorted the comments by time."
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "my cereal :D"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__SHOPPING__/f/MechanicalKeyboards/100086/my-cereal-d/linear",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "easy",
        "visual_reasoning": false,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 3
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 11,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Take me to {description}.",
        "intent": "Take me to the user page for the user whose comment was the second one highlighted in the video.",
        "intermediate_intent": "What was the name of the user whose comment was the second one highlighted in the video?",
        "video": "time_and_comment",
        "instantiation_dict": {
            "description": "the user page for the user whose comment was the second one highlighted in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Calmed_Entropy"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__SHOPPING__/user/Calmed_Entropy",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 3
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 12,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "I recall {description}. Can you {description2}?",
        "intent": "I recall the person in the video stating they are a fan of a certain team. Can you block the author of the first post that comes up when you search the team (without the city) the person in the video is a fan of?",
        "intermediate_intent": "What was the team (without the city) the person in the video stated they were a fan of?",
        "video": "poster_info",
        "instantiation_dict": {
            "description": "the person in the video stating they are a fan of a certain team",
            "description2": "block the author of the first post that comes up when you search the team (without the city) the person in the video is a fan of"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "steelers"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "program_html": [
                {
                    "url": "__REDDIT__/user/MarvelsGrantMan136/block_list",
                    "locator": "func:get_query_text(__page__, '.site-content')",
                    "required_contents": {
                        "must_include": [
                            "BCLetsRide69"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "medium",
        "visual_reasoning": false,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 6
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 13,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you message {description}.",
        "intent": "Can you message the user who made the post with the rainbow image in the video 'nice rainbow'.",
        "intermediate_intent": "What was the name of the user who made the post with the rainbow image in the video?",
        "video": "poster_info",
        "instantiation_dict": {
            "description": "the user who made the post with the rainbow image in the video 'nice rainbow'"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "put_the_ux_in_sux"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/messages",
                    "locator": "func:get_query_text(__page__, \"#main > table > tbody\")",
                    "required_contents": {
                        "must_include": [
                            "put_the_ux_in_sux",
                            "nice rainbow"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 8
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 14,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Take me to {description}.",
        "intent": "Take me to the post with the second most comments on the first page in the video that shows images.",
        "intermediate_intent": "What was the name of the post with the second most comments on the first page in the video that shows images?",
        "video": "poster_info",
        "instantiation_dict": {
            "description": "the post with the second most comments on the first page in the video that shows images"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "This gem from Nextdoor: Southside"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/f/pittsburgh/111046/this-gem-from-nextdoor-southside",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 3
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 15,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you leave a comment {description}.",
        "intent": "Can you leave a comment on all the posts in the video with black and white images, saying 'this is so old-school'.",
        "intermediate_intent": "What are the names of the posts in the video with black and white images?",
        "video": "poster_info",
        "instantiation_dict": {
            "description": "on all the posts in the video with black and white images, saying 'this is so old-school'"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Men gathered around sign reading \"Police.. We need your protection... not your harassment, Garfield Teen Organization,\" on Columbo Avenue, Garfield: April, 1968: photograph by charles \"teenie\" Harris."
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/pittsburgh/89805/men-gathered-around-sign-reading-police-we-need-your",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "this is so old-school!"
                    }
                }
            ]
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 5
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 16,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you leave a comment {description}.",
        "intent": "Can you leave a comment on all the posts in the video with yellow sweaters, saying 'I need a yellow sweater too!'.",
        "intermediate_intent": "What are the names of the posts in the video with with yellow sweaters?",
        "video": "make_post",
        "instantiation_dict": {
            "description": "on all the posts in the video with yellow sweaters, saying 'I need a yellow sweater too!'"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "[N] new SNAPCHAT feature transfers an image of an upper body garment in realtime on a person in AR"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/MachineLearning/34825/n-new-snapchat-feature-transfers-an-image-of-an-upper-body",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "I need a yellow sweater too!"
                    }
                }
            ]
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 5
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 17,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Make a new post {description}.",
        "intent": "Make a new post the same as the second post in the video, but without the image and content.",
        "intermediate_intent": "What is the title and forum of the second post in the video?",
        "video": "make_post",
        "instantiation_dict": {
            "description": "the same as the second post in the video, but without the image and content"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Team USA wins gold in basketball!",
                    "sports"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "last",
                    "locator": "func:get_query_text(__page__, \"#main > article > div > div.submission__inner > header\")",
                    "required_contents": {
                        "must_include": [
                            "Team USA wins gold in basketball!",
                            "sports",
                            "MarvelsGrantMan136"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 9
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 18,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "The person in the video {description}. Can you {description2}?",
        "intent": "The person in the video asks for comments and feedback about their video. Can you subscribe to the forum which has the post whose page the person in the video is on when they ask for comments and feedback??",
        "intermediate_intent": "What is the forum which has the post whose page the person in the video is on when they ask for comments and feedback?",
        "video": "make_post",
        "instantiation_dict": {
            "description": "asks for comments and feedback about their video",
            "description2": "subscribe to the forum which has the post whose page the person in the video is on when they ask for comments and feedback?"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "sports"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "program_html": [
                {
                    "url": "__REDDIT__",
                    "locator": "func:get_query_text(__page__, '.sidebar')",
                    "required_contents": {
                        "must_include": [
                            "sports"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "easy",
        "visual_reasoning": false,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 0
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 19,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you leave a comment {description}.",
        "intent": "Can you leave a comment stating 'gotcha!' on the post(s) made by the author that are present in the video, but was not created in the video.",
        "intermediate_intent": "What is the name of the post made by the author that is present in the video, but was not created in the video?",
        "video": "make_post",
        "instantiation_dict": {
            "description": "stating 'gotcha!' on the post(s) made by the author that are present in the video, but was not created in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Nvidia RTX 4090"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/MachineLearning/1/nvidia-rtx-4090",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "gotcha!"
                    }
                }
            ]
        },
        "overall_difficulty": "hard",
        "intermediate_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 5
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 20,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you leave a comment {description}.",
        "intent": "Can you leave a comment stating 'this is hilarious!' on the first post with an image that comes up in the third search in the video.",
        "intermediate_intent": "What is the name of the first post with an image that comes up in the third search in the video?",
        "video": "search",
        "instantiation_dict": {
            "description": "stating 'this is hilarious!' on the first post with an image that comes up in the third search in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "In the mind of Ronaldo"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/gifs/40597/in-the-mind-of-ronaldo",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "this is hilarious!"
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 5
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 21,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you upvote all the posts {description}?",
        "intent": "Can you upvote all the posts that come up when you search for x, where x is the combined search terms from the video in chronological order split by space?",
        "intermediate_intent": "What is the combined search terms from the video in chronological order split by space?",
        "video": "search",
        "instantiation_dict": {
            "description": "that come up when you search for x, where x is the combined search terms from the video in chronological order split by space"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "soccer world cup ronaldo"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/nosleep/130101/what-happened-at-hotel-carlton",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-upvoted"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 7
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 22,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you message {description}.",
        "intent": "Can you message 'awesome poster' the user whose post with a person in a red shirt is the second appearance of its type in the video.",
        "intermediate_intent": "What is the name of the user  whose post with a person in a red shirt is the second appearance of its type in the video?",
        "video": "search",
        "instantiation_dict": {
            "description": "'awesome poster' the user whose post with a person in a red shirt is the second appearance of its type in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "AttackOnRetail"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/messages",
                    "locator": "func:get_query_text(__page__, \"#main > table > tbody\")",
                    "required_contents": {
                        "must_include": [
                            "AttackOnRetail",
                            "awesome poster"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 8
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 23,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Take me to {description}.",
        "intent": "Take me to the image page the person in the video went to.",
        "intermediate_intent": "What is the name of the post whose image page the person in the video went to?",
        "video": "search",
        "instantiation_dict": {
            "description": "the image page the person in the video went to"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Frequency and Success of every score in the group stage of the world cup over the period 1998 - 2018 (current world cup format) [OC]"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/submission_images/2a3820fc363138f704aa7399966177a553992c0dc019ede41cab1add88286ab0.png",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 3
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 24,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "The person in the video {description}. Can you {description2}?",
        "intent": "The person in the video mentions they are from a certain city. Can you search for the city and take me to the comments section of the second post that comes up?",
        "intermediate_intent": "What is the name of the city the person in the video says they are from?",
        "video": "repost",
        "instantiation_dict": {
            "description": "mentions they are from a certain city",
            "description2": "search for the city and take me to the comments section of the second post that comes up"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "cambridge"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/f/boston/38636/prince-william-and-princess-kate-visiting-cambridge-when",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "medium",
        "visual_reasoning": false,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 0
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 25,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "The person in the video {description}. Can you {description2}?",
        "intent": "The person in the video mentions they are from a certain city. Can you subscribe to the most well matched forum for that city?",
        "intermediate_intent": "What is the name of the city the person in the video says they are from?",
        "video": "repost",
        "instantiation_dict": {
            "description": "mentions they are from a certain city",
            "description2": "subscribe to the most well matched forum for that city"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "cambridge"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "program_html": [
                {
                    "url": "__REDDIT__",
                    "locator": "func:get_query_text(__page__, '.sidebar')",
                    "required_contents": {
                        "must_include": [
                            "CambridgeMA"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "easy",
        "visual_reasoning": false,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 0
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 26,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "For the {description}, can you {description2}?",
        "intent": "For the person on the left in the first image that was reposted, can you search their full name and return the fourth post that comes up?",
        "intermediate_intent": "What is the full name of the person on the left in the first image that was reposted?",
        "video": "repost",
        "instantiation_dict": {
            "description": "person on the left in the first image that was reposted",
            "description2": "search their full name and return the fourth post that comes up"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "lebron james"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/f/sports/92212/lebron-james-becomes-second-player-in-nba-history-to-reach",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 10
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 27,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you subscribe {description}?",
        "intent": "Can you subscribe to all the forums that the user in the video reposted to?",
        "intermediate_intent": "What are the names of all the forums that the user in the video reposted to?",
        "video": "repost",
        "instantiation_dict": {
            "description": "to all the forums that the user in the video reposted to"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "worldnews",
                    "massachusetts",
                    "funny"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "program_html": [
                {
                    "url": "__REDDIT__",
                    "locator": "func:get_query_text(__page__, '.sidebar')",
                    "required_contents": {
                        "must_include": [
                            "worldnews",
                            "massachusetts",
                            "funny"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 11
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 28,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "For the {description}, can you {description2}?",
        "intent": "For the second forum in the video the user reposted to, can you take me to the most commented post all time?",
        "intermediate_intent": "What was the second forum in the video the user reposted to?",
        "video": "repost",
        "instantiation_dict": {
            "description": "second forum in the video the user reposted to",
            "description2": "take me to the most commented post all time"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "massachusetts"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/f/massachusetts/62741/u-s-hospitals-are-required-to-publish-their-prices-forn",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "medium",
        "visual_reasoning": false,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 10
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 29,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "The person in the video {description}. Can you {description2}?",
        "intent": "The person in the video states a certain movie series has the best trailers. Can you search for the mentioned series and comment 'they were right' on the post that comes up with a gif?",
        "intermediate_intent": "What movie series has the best trailers according to the person in the video?",
        "video": "subscribe",
        "instantiation_dict": {
            "description": "states a certain movie series has the best trailers",
            "description2": "search for the mentioned series and comment 'they were right' on the post that comes up with a gif"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "star wars"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/gifs/105662/i-drew-this-pixel-art-from-one-of-star-war-s-characters",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "they were right"
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "medium",
        "visual_reasoning": false,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 0
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 30,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you subscribe {description}?",
        "intent": "Can you subscribe to all the forums that the user in the video subscribed to?",
        "intermediate_intent": "What are the names of the forums that the user subscribed to in the video?",
        "video": "subscribe",
        "instantiation_dict": {
            "description": "to all the forums that the user in the video subscribed to"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "gaming",
                    "movies"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "program_html": [
                {
                    "url": "__REDDIT__",
                    "locator": "func:get_query_text(__page__, '.sidebar')",
                    "required_contents": {
                        "must_include": [
                            "gaming",
                            "movies"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "medium",
        "visual_reasoning": false,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 11
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 31,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you message {description}?",
        "intent": "Can you message 'lucky post you got there' to the author of the top post in the first forum the user in the video subscribed to?",
        "intermediate_intent": "What is the name of the first forum that the user subscribed to in the video?",
        "video": "subscribe",
        "instantiation_dict": {
            "description": "'lucky post you got there' to the author of the top post in the first forum the user in the video subscribed to"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "gaming"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/messages",
                    "locator": "func:get_query_text(__page__, \"#main > table > tbody\")",
                    "required_contents": {
                        "must_include": [
                            "colmscomics",
                            "lucky post you got there"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 12
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 32,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you upvote all the posts {description}?",
        "intent": "Can you upvote all the posts on Postmill that show the home menu screen of the previous generation version of the gaming console the person in the video said they use?",
        "intermediate_intent": "What is the previous generation version of the gaming console the person in the video said they use?",
        "video": "post_from_shopping",
        "instantiation_dict": {
            "description": "on Postmill that show the home menu screen of the previous generation version of the gaming console the person in the video said they use"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "playstation 4 |or| ps4 |or| PS4 |or| Playstation 4"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/gaming/19746/after-dreaming-about-a-ps4-since-2013-finally-got-one-thanks",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-upvoted"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "hard",
        "visual_reasoning": false,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 7
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 33,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "The person in the video {description}. Can you {description2}?",
        "intent": "The person in the video mentions they are a fan of another NFL team. Can you search for the team (just the mascot) and find the top post from the search?",
        "intermediate_intent": "What is the NFL team (just the mascot) the person in the video says they are a fan of?",
        "video": "post_from_shopping",
        "instantiation_dict": {
            "description": "mentions they are a fan of another NFL team",
            "description2": "search for the team (just the mascot) and find the top post from the search"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "falcons"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/f/space/69699/spacex-caps-2022-with-record-setting-61st-falcon-9-launch",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "easy",
        "visual_reasoning": false,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 0
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 34,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you subscribe {description}?",
        "intent": "Can you subscribe to all the forums the person in the video posted to?",
        "intermediate_intent": "What are the names of all the forums the person in the video posted to?",
        "video": "post_from_shopping",
        "instantiation_dict": {
            "description": "to all the forums the person in the video posted to"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "pittsburgh",
                    "gaming"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "program_html": [
                {
                    "url": "__REDDIT__",
                    "locator": "func:get_query_text(__page__, '.sidebar')",
                    "required_contents": {
                        "must_include": [
                            "gaming",
                            "pittsburgh"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "medium",
        "visual_reasoning": false,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 11
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 35,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you downvote {description}?",
        "intent": "Can you downvote the top 3 posts in the second forum the user in the video posted to?",
        "intermediate_intent": "What was the name of the second forum the user in the video posted to?",
        "video": "post_from_shopping",
        "instantiation_dict": {
            "description": "the top 3 posts in the second forum the user in the video posted to"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "pittsburgh"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/pittsburgh/45899/driving-in-pittsburgh-summed-up-by-one-traffic-sign",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-downvoted"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/pittsburgh/89846/fallingwater-by-lisa-frank-lloyd-wright",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-downvoted"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/pittsburgh/45900/happy-light-up-night-pittsburgh",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-downvoted"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 13
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 36,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you block {description}?",
        "intent": "Can you block the authors of the posts with images broken down into panels in the video?",
        "intermediate_intent": "What are the name of the authors who made posts with the images broken down into panels in the video?",
        "video": "post_from_shopping",
        "instantiation_dict": {
            "description": "the authors of the posts with images broken down into panels in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "fart_Jr",
                    "colmscomics"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "program_html": [
                {
                    "url": "__REDDIT__/user/MarvelsGrantMan136/block_list",
                    "locator": "func:get_query_text(__page__, '.site-content')",
                    "required_contents": {
                        "must_include": [
                            "fart_Jr",
                            "colmscomics"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 14
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 37,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you change {description}?",
        "intent": "Can you change my username to the username the person in the video made the first change with?",
        "intermediate_intent": "What was the username the person in the video made the first change with?",
        "video": "account_info",
        "instantiation_dict": {
            "description": "my username to the username the person in the video made the first change with"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "MarvelsGrantMan135"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "program_html": [
                {
                    "url": "__REDDIT__",
                    "locator": "func:get_query_text(__page__, '.site-nav')",
                    "required_contents": {
                        "must_include": [
                            "MarvelsGrantMan135"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 15
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 38,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Take me to {description}.",
        "intent": "Take me to the comments section of the top post made my the person's account visible in the video.",
        "intermediate_intent": "What was name of the top post made my the person's account visible in the video?",
        "video": "account_info",
        "instantiation_dict": {
            "description": "the comments section of the top post made my the person's account visible in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "'Yellowjackets' Season 2 Premiere Draws Nearly 2M Viewers, Breaks Showtime Streaming Record"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/f/television/134942/yellowjackets-season-2-premiere-draws-nearly-2m-viewers",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 3
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 39,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you leave a comment {description}.",
        "intent": "Can you leave a comment 'this was popular' replying to the top comment made my the person's account visible in the video.",
        "intermediate_intent": "What was name of the post with the top comment made my the person's account visible in the video?",
        "video": "account_info",
        "instantiation_dict": {
            "description": "'this was popular' replying to the top comment made my the person's account visible in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "David Cross Joins the Final Season of 'The Umbrella Academy'"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/television/113998",
                    "locator": "func:reddit_get_parent_comment_username_of_latest_comment_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "MarvelsGrantMan136"
                    }
                },
                {
                    "url": "__REDDIT__/f/television/113998",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "this was popular"
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 5
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 40,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "The person in the video {description}. Can you {description2}?",
        "intent": "The person in the video says 'thanks' at a certain point. Can you take me to the page they were on when they say this?",
        "intermediate_intent": "What was the title of the page the person in the video was on when they said thanks?",
        "video": "account_info",
        "instantiation_dict": {
            "description": "says 'thanks' at a certain point",
            "description2": "take me to the page they were on when they say this"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "user settings"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/user/MarvelsGrantMan136/preferences",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "easy",
        "visual_reasoning": false,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 0
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 41,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "The person in the video {description}. Can you {description2}?",
        "intent": "The person in the video mentions they are reading a certain book series currently. Can you return the image link of a flowchart about the book series on this website?",
        "intermediate_intent": "What was the book series the person in the video says they are reading currently?",
        "video": "vote_tutorial",
        "instantiation_dict": {
            "description": "mentions they are reading a certain book series currently",
            "description2": "return the image link of a flowchart about the book series on this website"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "harry potter |OR| Harry Potter"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "__SHOPPING__/submission_images/349ef80fe547337790ce43ec72bb94e8f2d256b3416794418d8f50fd0bc04208.png"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": false,
        "audio_reasoning": true,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 0
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 42,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you leave a comment {description}?",
        "intent": "Can you leave a comment saying 'first downvote' on the first post in the video that gets a downvote??",
        "intermediate_intent": "What was the name of the first post in the video that gets a downvote?",
        "video": "vote_tutorial",
        "instantiation_dict": {
            "description": "saying 'first downvote' on the first post in the video that gets a downvote?"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "My girlfriend left me because of my abandonment issues..."
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/Jokes/119862/my-girlfriend-left-me-because-of-my-abandonment-issues",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "first downvote"
                    }
                }
            ]
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 1
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 43,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "For the {description}, can you {description2}",
        "intent": "For the first forum in the video, can you downvote all the upvoted posts and upvote all the downvoted posts?",
        "intermediate_intent": "What was the first forum in the video?",
        "video": "vote_tutorial",
        "instantiation_dict": {
            "description": "first forum in the video",
            "description2": "downvote all the upvoted posts and upvote all the downvoted posts?"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Jokes"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/Jokes/119862/my-girlfriend-left-me-because-of-my-abandonment-issues",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-downvoted"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/Jokes/119951/little-johnny-s-parents-wanted-to-have-some-alone-time",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-downvoted"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/Jokes/119950/at-the-bar-last-night-a-woman-got-her-nipple-pierced-right",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-downvoted"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/Jokes/77160/i-m-surprised-that-so-many-jokes-here-are-tagged-nsfw",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-downvoted"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/Jokes/77340/this-man-went-out-with-the-boys-and-told-his-wife-that-he",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-upvoted"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/Jokes/55249/a-priest-and-a-nun-in-a-desert-cabin",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-upvoted"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 16
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 44,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Take me to {description}.",
        "intent": "Take me to the user page for the last post the person in the video voted on.",
        "intermediate_intent": "What was the name of the user for the last post the person in the video voted o?",
        "video": "vote_tutorial",
        "instantiation_dict": {
            "description": "the user page for the last post the person in the video voted on"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "pensieve64"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/user/pensieve64",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 3
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 45,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you message {description}?",
        "intent": "Can you message 'I loved this post' to the poster of the second most commented post in the second forum the person in the video visited, that they upvoted?",
        "intermediate_intent": "What was the name of the poster of the second most commented post in the second forum the person in the video visited, that they upvoted?",
        "video": "vote_tutorial",
        "instantiation_dict": {
            "description": "'I loved this post' to the poster of the second most commented post in the second forum the person in the video visited, that they upvoted"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "RunDNA"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/messages",
                    "locator": "func:get_query_text(__page__, \"#main > table > tbody\")",
                    "required_contents": {
                        "must_include": [
                            "RunDNA",
                            "I loved this post"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 12
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 46,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "The person in the video {description}. Can you {description2}.",
        "intent": "The person in the video says 'thanks' at a certain point. Can you take me to the page they were on when they say this?.",
        "intermediate_intent": "What was the title of the page the person in the video was on when they said thanks?",
        "video": "subreddit",
        "instantiation_dict": {
            "description": "says 'thanks' at a certain point",
            "description2": "take me to the page they were on when they say this?"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "forums"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/forums/all",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 4
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 47,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you subscribe {description}?",
        "intent": "Can you subscribe to all the forums visited in the video?",
        "intermediate_intent": "What are the names of all the forums the person in the video visited?",
        "video": "subreddit",
        "instantiation_dict": {
            "description": "to all the forums visited in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "MachineLearning",
                    "arlingtonva",
                    "personalfinance"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "program_html": [
                {
                    "url": "__REDDIT__",
                    "locator": "func:get_query_text(__page__, '.sidebar')",
                    "required_contents": {
                        "must_include": [
                            "MachineLearning",
                            "arlingtonva",
                            "personalfinance"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 11
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 48,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you make a post {description}?",
        "intent": "Can you make a post in the second forum the person visited in the video?",
        "intermediate_intent": "What is the name of the second forum the person in the video visited?",
        "video": "subreddit",
        "instantiation_dict": {
            "description": "in the second forum the person visited in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "arlingtonva"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "last",
                    "locator": "func:get_query_text(__page__, \"#main > article > div > div.submission__inner > header\")",
                    "required_contents": {
                        "must_include": [
                            "arlingtonva",
                            "MarvelsGrantMan136"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 17
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 49,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you repost {description}?",
        "intent": "Can you repost the top post in the first forum to the second forum the user visited in the video??",
        "intermediate_intent": "What are the names of the first and second forum the person in the video visited?",
        "video": "subreddit",
        "instantiation_dict": {
            "description": "the top post in the first forum to the second forum the user visited in the video?"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "MachineLearning",
                    "arlingtonva"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html",
                "page_image_query",
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "f/arlingtonva",
            "url_note": "",
            "program_html": [
                {
                    "url": "last",
                    "locator": "lambda:(() => { try { return document.querySelector('.submission__link').textContent } catch { return '' } })()",
                    "required_contents": {
                        "exact_match": "[P] I made a command-line tool that explains your errors using ChatGPT (link in comments)"
                    }
                }
            ],
            "page_image_query": [
                {
                    "eval_image_url": "last",
                    "eval_image_class": ".submission__image",
                    "eval_fuzzy_image_match": "__REDDIT__/submission_images/c5baabe3d849e5940bdf4aa2093a81fbb30cef546ca57df3c26b56739e2a5f71.gif"
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 18
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 50,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__ |AND| __SHOPPING__ ",
        "geolocation": null,
        "intent_template": "Can you make a post {description}",
        "intent": "Can you make a post in the gaming forum using the title and image of the second item item the user added to cart in the video?",
        "intermediate_intent": "What was the name of the second item item the user added to cart in the video?",
        "video": "reddit_shopping_buy",
        "instantiation_dict": {
            "description": "in the gaming forum using the title and image of the second item item the user added to cart in the video?"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "SCUF Instinct Pro Steel Gray Custom Wireless Performance Controller for Xbox Series X|S, Xbox One, PC, and Mobile - Steel Gray - Xbox Series X"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html",
                "page_image_query"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "last",
                    "locator": "func:get_query_text(__page__, \"#main > article > div > div.submission__inner > header\")",
                    "required_contents": {
                        "must_include": [
                            "SCUF Instinct Pro Steel Gray Custom Wireless Performance Controller for Xbox Series X|S, Xbox One, PC, and Mobile - Steel Gray - Xbox Series X",
                            "MarvelsGrantMan136"
                        ]
                    }
                }
            ],
            "page_image_query": [
                {
                    "eval_image_url": "last",
                    "eval_image_class": ".submission__image",
                    "eval_fuzzy_image_match": "__SHOPPING__/media/catalog/product/cache/829a59e57f886f8cf0598ffca4f8a940/B/0/B06VTRJGCP.0.jpg"
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 19
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 51,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__ |AND| __SHOPPING__ ",
        "geolocation": null,
        "intent_template": "Can you make a post {description}",
        "intent": "Can you make a post in the gaming forum using the title and image of the first item item the user added to cart in the video?",
        "intermediate_intent": "What was the name of the first item item the user added to cart in the video?",
        "video": "reddit_shopping_buy",
        "instantiation_dict": {
            "description": "in the gaming forum using the title and image of the first item item the user added to cart in the video?"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "The Lord of The Rings Men's Film Trilogy Logo Sleepwear Lounge Bottoms Pajama Pants"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html",
                "page_image_query"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "last",
                    "locator": "func:get_query_text(__page__, \"#main > article > div > div.submission__inner > header\")",
                    "required_contents": {
                        "must_include": [
                            "SCUF Instinct Pro Steel Gray Custom Wireless Performance Controller for Xbox Series X|S, Xbox One, PC, and Mobile - Steel Gray - Xbox Series X",
                            "MarvelsGrantMan136"
                        ]
                    }
                }
            ],
            "page_image_query": [
                {
                    "eval_image_url": "last",
                    "eval_image_class": ".submission__image",
                    "eval_fuzzy_image_match": "__SHOPPING__/media/catalog/product/cache/829a59e57f886f8cf0598ffca4f8a940/B/0/B093CFW2S1.0.jpg"
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 19
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 52,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Take me to {description}.",
        "intent": "Take me to the comments section of the Postmill post with the most upvotes in the video.",
        "intermediate_intent": "How many upvotes did the post with the most upvotes in the video have?",
        "video": "reddit_shopping_buy",
        "instantiation_dict": {
            "description": "the comments section of the Postmill post with the most upvotes in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "3591"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/f/books/81371/the-letters-of-t-s-eliot-to-emily-hale-that-were-kept-sealed",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 3
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 53,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you leave a comment {description}.",
        "intent": "Can you leave a comment 'I just bought one too' on the first post that came up after the person in the video used the search bar in Postmill?.",
        "intermediate_intent": "What was the name of the first post that came up after the person in the video used the search bar in Postmill",
        "video": "reddit_shopping_buy",
        "instantiation_dict": {
            "description": "'I just bought one too' on the first post that came up after the person in the video used the search bar in Postmill?"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Any reason to keep my Xbox? Can I remote play from a tablet from a different room? Like Xbox Remote Play?"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/Washington/37077/eatonville-view",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "I just bought one too"
                    }
                }
            ]
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 5
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 54,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you leave a comment {description}.",
        "intent": "Can you leave a comment 'this seems controversial' on the post with the most comments that came up after the person in the video used the search bar in Postmill?.",
        "intermediate_intent": "What was the name of the post with the most comments that came up after the person in the video used the search bar in Postmill?",
        "video": "reddit_shopping_buy",
        "instantiation_dict": {
            "description": "'this seems controversial' on the post with the most comments that came up after the person in the video used the search bar in Postmill?"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Any reason to keep my Xbox? Can I remote play from a tablet from a different room? Like Xbox Remote Play?"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/consoles/59868/should-i-stay-on-playstation-or-switch-to-xbox",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "'this seems controversial'"
                    }
                }
            ]
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 5
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 55,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "The person in the video {description}. Can you {description2}?",
        "intent": "The person in the video says 'thanks' at a certain point. Can you take me to the page they were on when they say this?",
        "intermediate_intent": "What was the page the person in the video was on when they said thanks?",
        "video": "reddit_shopping_buy",
        "instantiation_dict": {
            "description": "says 'thanks' at a certain point",
            "description2": "take me to the page they were on when they say this"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "xbox",
                    "search"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/search?q=xbox",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 0
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 56,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "The person in the video {description}. Can you {description2}?",
        "intent": "The person in the video says 'thanks' at a certain point. Can you take me to the page they were on when they say this?",
        "intermediate_intent": "What was the title of the page the person in the video was on when they said thanks?",
        "video": "reddit_wikipedia_info",
        "instantiation_dict": {
            "description": "says 'thanks' at a certain point",
            "description2": "take me to the page they were on when they say this"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Russians kidnapped 30 mayors, 7 of them went missing - Kyiv Mayor"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/f/worldnews/72951/russians-kidnapped-30-mayors-7-of-them-went-missing-kyiv",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 0
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 57,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Make a new post {description}.",
        "intent": "Make a new post in the same forum as the third post visited in the video, and title the new post as 'New Tech Company on the rise?'.",
        "intermediate_intent": "What was the forum of the third post visited in the video?",
        "video": "reddit_wikipedia_info",
        "instantiation_dict": {
            "description": "in the same forum as the third post visited in the video, and title the new post as 'New Tech Company on the rise?'"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "technology"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "last",
                    "locator": "func:get_query_text(__page__, \"#main > article > div > div.submission__inner > header\")",
                    "required_contents": {
                        "must_include": [
                            "New Tech Company on the rise?",
                            "technology",
                            "MarvelsGrantMan136"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 9
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 58,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Make a new post {description}.",
        "intent": "Make a new post in the same forum as the fourth post visited in the video, and title the new post as 'Where should I start?'.",
        "intermediate_intent": "What was the forum of the fourth post visited in the video?",
        "video": "reddit_wikipedia_info",
        "instantiation_dict": {
            "description": "in the same forum as the fourth post visited in the video, and title the new post as 'Where should I start?'"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "sports"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "last",
                    "locator": "func:get_query_text(__page__, \"#main > article > div > div.submission__inner > header\")",
                    "required_contents": {
                        "must_include": [
                            "Where should I start?",
                            "sports",
                            "MarvelsGrantMan136"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 9
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 59,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Make a new post {description}.",
        "intent": "Make a new post in the same forum as the second post visited in the video, and title the new post as 'My own report'.",
        "intermediate_intent": "What was the forum of the second post visited in the video?",
        "video": "reddit_wikipedia_info",
        "instantiation_dict": {
            "description": "in the same forum as the second post visited in the video, and title the new post as 'My own report'"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "worldnews"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "last",
                    "locator": "func:get_query_text(__page__, \"#main > article > div > div.submission__inner > header\")",
                    "required_contents": {
                        "must_include": [
                            "My own report",
                            "worldnews",
                            "MarvelsGrantMan136"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 9
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 60,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Take me to {description}.",
        "intent": "Take me to the comments section of the Postmill post with the most upvotes in the video.",
        "intermediate_intent": "How many upvotes did the post with the most upvotes in the video have?",
        "video": "reddit_wikipedia_info",
        "instantiation_dict": {
            "description": "the comments section of the Postmill post with the most upvotes in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "13682"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/f/technology/48670/brain-cancer-vaccine-succeeds-at-prolonging-survival-in",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 3
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 61,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you make a new forum {description}.",
        "intent": "Can you make a new forum identical to the first one in the video.",
        "intermediate_intent": "What was the name of the first forum in the video?",
        "video": "new_forum",
        "instantiation_dict": {
            "description": "identical to the first one in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "f/carnegiemellon"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/carnegiemellon",
                    "locator": "document.querySelector(\"#forum_description\").value",
                    "required_contents": {
                        "must_include": [
                            "A Forum For Carnegie Mellon University"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/carnegiemellon",
                    "locator": "document.querySelector(\"#forum_sidebar\").value",
                    "required_contents": {
                        "must_include": [
                            "Go Tartans!"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 20
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 62,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you make a new forum {description}.",
        "intent": "Can you make a new forum identical to the second one in the video.",
        "intermediate_intent": "What was the name of the second forum in the video?",
        "video": "new_forum",
        "instantiation_dict": {
            "description": "identical to the second one in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "f/llmagents"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/llmagents",
                    "locator": "document.querySelector(\"#forum_description\").value",
                    "required_contents": {
                        "must_include": [
                            "A Forum for LLM Agents"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/llmagents",
                    "locator": "document.querySelector(\"#forum_sidebar\").value",
                    "required_contents": {
                        "must_include": [
                            "LLM Agents"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 20
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 63,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "The person in the video {description}. Can you {description2}?",
        "intent": "The person in the video says 'thanks' at a certain point. Can you take me to the page they were on when they say this?",
        "intermediate_intent": "What was the title of the page the person in the video was on when they said thanks?",
        "video": "new_forum",
        "instantiation_dict": {
            "description": "says 'thanks' at a certain point",
            "description2": "take me to the page they were on when they say this"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "user settings"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "fuzzy_match": "N/A"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "forum doesn't exist on the base website."
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 0
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 64,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Take me to {description}.",
        "intent": "Take me to the first forum in the video.",
        "intermediate_intent": "What was the first forum in the video?",
        "video": "new_forum",
        "instantiation_dict": {
            "description": "the first forum in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "f/carnegiemellon"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "fuzzy_match": "N/A"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "forum doesn't exist on the base website."
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 3
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 65,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Take me to {description}.",
        "intent": "Take me to the second forum in the video.",
        "intermediate_intent": "What was the second forum in the video?",
        "video": "new_forum",
        "instantiation_dict": {
            "description": "the second forum in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "f/llmagents"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "fuzzy_match": "N/A"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "forum doesn't exist on the base website."
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 3
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 66,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Make a new post {description}.",
        "intent": "Make a new post in the forum that was visited first in the video.",
        "intermediate_intent": "What was the first forum in the video?",
        "video": "new_forum",
        "instantiation_dict": {
            "description": "in the forum that was visited first in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "f/carnegiemellon"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "fuzzy_match": "N/A"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "forum doesn't exist on the base website."
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 9
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 67,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Make a new post {description}.",
        "intent": "Make a new post in the forum that was visited second in the video.",
        "intermediate_intent": "What was the second forum in the video?",
        "video": "new_forum",
        "instantiation_dict": {
            "description": "in the forum that was visited second in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "f/llmagents"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "fuzzy_match": "N/A"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "forum doesn't exist on the base website."
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 9
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 68,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Make all the forums {description}.",
        "intent": "Make all the forums identically to the ones created in the video.",
        "intermediate_intent": "What were the names of the forums created in the video?",
        "video": "new_forum",
        "instantiation_dict": {
            "description": "identically to the ones created in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "f/llmagents",
                    "f/carnegiemellon"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/llmagents",
                    "locator": "document.querySelector(\"#forum_description\").value",
                    "required_contents": {
                        "must_include": [
                            "A Forum for LLM Agents"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/llmagents",
                    "locator": "document.querySelector(\"#forum_sidebar\").value",
                    "required_contents": {
                        "must_include": [
                            "LLM Agents"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/carnegiemellon",
                    "locator": "document.querySelector(\"#forum_description\").value",
                    "required_contents": {
                        "must_include": [
                            "A Forum For Carnegie Mellon University"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/carnegiemellon",
                    "locator": "document.querySelector(\"#forum_sidebar\").value",
                    "required_contents": {
                        "must_include": [
                            "Go Tartans!"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 21
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 69,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "The person in the video {description}. Can you {description2}?",
        "intent": "The person in the video mentions their major. Can you go to the comments of the first post that comes up when searching for their major?",
        "intermediate_intent": "What was the person in the video's major?",
        "video": "vote_all_poster",
        "instantiation_dict": {
            "description": "mentions their major",
            "description2": "go to the comments of the first post that comes up when searching for their major"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Computer Science |OR| computer science"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/f/MachineLearning/34877/what-is-better-to-study-bachelor-in-computer-science-or-in",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "medium",
        "visual_reasoning": false,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 0
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 70,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you leave a comment {description}?",
        "intent": "Can you leave a comment saying 'first downvote' on the first post in the video that gets a downvote??",
        "intermediate_intent": "What was the name of the first post in the video that gets a downvote?",
        "video": "vote_all_poster",
        "instantiation_dict": {
            "description": "saying 'first downvote' on the first post in the video that gets a downvote?"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "[N] new SNAPCHAT feature transfers an image of an upper body garment in realtime on a person in AR"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "first downvote"
                    }
                }
            ]
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 1
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 71,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you leave a comment {description}?",
        "intent": "Can you leave a comment saying 'second downvote' on the second post in the video that gets a downvote??",
        "intermediate_intent": "What was the name of the second post in the video that gets a downvote?",
        "video": "vote_all_poster",
        "instantiation_dict": {
            "description": "saying 'second downvote' on the second post in the video that gets a downvote?"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "[R] APPLE research: GAUDI \u2014 a neural architect for immersive 3D scene generation"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "second downvote"
                    }
                }
            ]
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 1
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 72,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you leave a comment {description}?",
        "intent": "Can you leave a comment saying 'first upvote' on the first post in the video that gets a upvote?",
        "intermediate_intent": "What was the name of the first post in the video that gets a upvote?",
        "video": "vote_all_poster",
        "instantiation_dict": {
            "description": "saying 'first upvote' on the first post in the video that gets a upvote"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "[R] META presents MAV3D \u2014 text to 3D video"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "first upvote"
                    }
                }
            ]
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 1
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 73,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you leave a comment {description}?",
        "intent": "Can you leave a comment saying 'second upvote' on the second post in the video that gets a upvote?",
        "intermediate_intent": "What was the name of the second post in the video that gets a upvote?",
        "video": "vote_all_poster",
        "instantiation_dict": {
            "description": "saying 'second upvote' on the second post in the video that gets a upvote"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "[R] QUALCOMM demos 3D reconstruction on AR glasses \u2014 monocular depth estimation with self supervised neural network processed on glasses and smartphone in realtime"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "second upvote"
                    }
                }
            ]
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 1
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 74,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you leave a comment {description}?",
        "intent": "Can you leave a comment saying 'last upvote' on the last post in the video that gets a upvote?",
        "intermediate_intent": "What was the name of the last post in the video that gets a upvote?",
        "video": "vote_all_poster",
        "instantiation_dict": {
            "description": "saying 'last upvote' on the last post in the video that gets a upvote"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "4 Trillion dollar corrective response"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "last upvote"
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 1
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 75,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "For {description}, can you {description2}?",
        "intent": "For all the posts voted in the video, can you downvote all the upvoted posts and upvote all the downvoted posts?",
        "intermediate_intent": "What are the names of all the voted posts in the video?",
        "video": "vote_all_poster",
        "instantiation_dict": {
            "description": "all the posts voted in the video",
            "description2": "downvote all the upvoted posts and upvote all the downvoted posts"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "[R] APPLE research: GAUDI \u2014 a neural architect for immersive 3D scene generation",
                    "[R] QUALCOMM demos 3D reconstruction on AR glasses \u2014 monocular depth estimation with self supervised neural network processed on glasses and smartphone in realtime",
                    "[N] new SNAPCHAT feature transfers an image of an upper body garment in realtime on a person in AR",
                    "[R] APPLE research: GAUDI \u2014 a neural architect for immersive 3D scene generation",
                    "4 Trillion dollar corrective response"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/wallstreetbets/136192/4-trillion-dollar-corrective-response",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-downvoted"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/MachineLearning/77983/r-meta-presents-mav3d-text-to-3d-video",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-downvoted"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/MachineLearning/34862/r-qualcomm-demos-3d-reconstruction-on-ar-glasses-monocular",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-downvoted"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/MachineLearning/34825/n-new-snapchat-feature-transfers-an-image-of-an-upper-body",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-upvoted"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/MachineLearning/34760/r-apple-research-gaudi-a-neural-architect-for-immersive-3d",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-upvoted"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 22
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 76,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "For {description}, can you {description2}?",
        "intent": "For all the posts voted in the video, can you downvote all the downvoted posts and upvote all the upvoted posts?",
        "intermediate_intent": "What are the names of all the voted posts in the video?",
        "video": "vote_all_poster",
        "instantiation_dict": {
            "description": "all the posts voted in the video",
            "description2": "downvote all the downvoted posts and upvote all the upvoted posts"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "[R] APPLE research: GAUDI \u2014 a neural architect for immersive 3D scene generation",
                    "[R] QUALCOMM demos 3D reconstruction on AR glasses \u2014 monocular depth estimation with self supervised neural network processed on glasses and smartphone in realtime",
                    "[N] new SNAPCHAT feature transfers an image of an upper body garment in realtime on a person in AR",
                    "[R] APPLE research: GAUDI \u2014 a neural architect for immersive 3D scene generation",
                    "4 Trillion dollar corrective response"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/wallstreetbets/136192/4-trillion-dollar-corrective-response",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-upvoted"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/MachineLearning/77983/r-meta-presents-mav3d-text-to-3d-video",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-upvoted"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/MachineLearning/34862/r-qualcomm-demos-3d-reconstruction-on-ar-glasses-monocular",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-upvoted"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/MachineLearning/34825/n-new-snapchat-feature-transfers-an-image-of-an-upper-body",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-downvoted"
                        ]
                    }
                },
                {
                    "url": "__REDDIT__/f/MachineLearning/34760/r-apple-research-gaudi-a-neural-architect-for-immersive-3d",
                    "locator": "document.querySelectorAll('div.submission__vote')[0].querySelector('form').getAttribute('class')",
                    "required_contents": {
                        "must_include": [
                            "vote vote--user-downvoted"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 22
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 77,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Take me to {description}.",
        "intent": "Take me to the user page for the last post the person in the video voted on.",
        "intermediate_intent": "What was the name of the user for the last post the person in the video voted o?",
        "video": "vote_all_poster",
        "instantiation_dict": {
            "description": "the user page for the last post the person in the video voted on"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Theorysquatch"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/user/Theorysquatch",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 3
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 78,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "The person in the video {description}. Can you {description2}?",
        "intent": "The person in the video says 'thanks' at a certain point. Can you take me to the page they were on when they say this?",
        "intermediate_intent": "What was the title of the page the person in the video was on when they said thanks?",
        "video": "vote_all_poster",
        "instantiation_dict": {
            "description": "says 'thanks' at a certain point",
            "description2": "take me to the page they were on when they say this"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Theorysquatch",
                    "comments"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/user/Theorysquatch",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 0
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 79,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "The person in the video {description}. Can you {description2}?",
        "intent": "The person in the video says 'thanks' at a certain point. Can you take me to the forum of the post they were on when they say this?",
        "intermediate_intent": "What was the forum of the post they were on when they say 'thanks'?",
        "video": "edit_post",
        "instantiation_dict": {
            "description": "says 'thanks' at a certain point",
            "description2": "take me to the forum of the post they were on when they say this"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "movies"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/f/movies",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 0
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 80,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you subscribe {description}",
        "intent": "Can you subscribe to all the forums that the user in the video edited a post from?",
        "intermediate_intent": "What were the forums of the posts edited in the video?",
        "video": "edit_post",
        "instantiation_dict": {
            "description": "to all the forums that the user in the video edited a post from?"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "movies",
                    "television"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "program_html": [
                {
                    "url": "__REDDIT__",
                    "locator": "func:get_query_text(__page__, '.sidebar')",
                    "required_contents": {
                        "must_include": [
                            "movies",
                            "television"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 23
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 81,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you subscribe {description}",
        "intent": "Can you subscribe to the forum with the first post that the user in the video edited?",
        "intermediate_intent": "What were the forums of the first post edited in the video?",
        "video": "edit_post",
        "instantiation_dict": {
            "description": "to the forum with the first post that the user in the video edited?"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "television"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "program_html": [
                {
                    "url": "__REDDIT__",
                    "locator": "func:get_query_text(__page__, '.sidebar')",
                    "required_contents": {
                        "must_include": [
                            "television"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 23
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 82,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you subscribe {description}",
        "intent": "Can you subscribe to the forum with the second post that the user in the video edited?",
        "intermediate_intent": "What were the forums of the second post edited in the video?",
        "video": "edit_post",
        "instantiation_dict": {
            "description": "to the forum with the second post that the user in the video edited?"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "movies"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "program_html": [
                {
                    "url": "__REDDIT__",
                    "locator": "func:get_query_text(__page__, '.sidebar')",
                    "required_contents": {
                        "must_include": [
                            "movies"
                        ]
                    }
                }
            ]
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": false,
        "temporal_reasoning": true,
        "comments": "",
        "intent_template_id": 23
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 83,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you edit the post {description}?",
        "intent": "Can you edit the post with the most upvotes in the video to include 'found it!' in the body?",
        "intermediate_intent": "What was the name of the post with the most upvotes in the video?",
        "video": "edit_post",
        "instantiation_dict": {
            "description": "with the most upvotes in the video to include 'found it!' in the body"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Editing submission 'Yellowjackets' Season 2 Premiere Draws Nearly 2M Viewers, Breaks Showtime Streaming Record"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/television/134942/yellowjackets-season-2-premiere-draws-nearly-2m-viewers",
                    "locator": "document.querySelector('.submission__body').outerText",
                    "required_contents": {
                        "exact_match": "found it!"
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 24
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 84,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you comment 'Nice post!' under {description}?",
        "intent": "Can you comment 'Nice post!' under the first post that was edited in the video?",
        "intermediate_intent": "What was the name of the first post that was edited in the video?",
        "video": "edit_post",
        "instantiation_dict": {
            "description": "the first post that was edited in the video"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "'The Last of Us' Moves Production to Vancouver for Season 2"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/television/135207/the-last-of-us-moves-production-to-vancouver-for-season-2",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "Nice post!"
                    }
                }
            ]
        },
        "intermediate_difficulty": "medium",
        "overall_difficulty": "medium",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 25
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 85,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "Can you comment 'Nice post!' under {description}?",
        "intent": "Can you comment 'Nice post!' under the post with the most amount of upvotes in the video?",
        "intermediate_intent": "What was the name of the post with the most amount of upvotes in the video?",
        "video": "search",
        "instantiation_dict": {
            "description": "the post with the most amount of upvotes"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Cristiano Ronaldo is hit with a \u00a350,000 fine and a two-match ban after he smashed a fan's phone following Man United's defeat against Everton in April... just a day after leaving the Red Devils"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "__REDDIT__/f/television/135207/the-last-of-us-moves-production-to-vancouver-for-season-2",
                    "locator": "func:reddit_get_latest_comment_content_by_username(__page__, 'MarvelsGrantMan136')",
                    "required_contents": {
                        "exact_match": "Nice post!"
                    }
                }
            ]
        },
        "intermediate_difficulty": "hard",
        "overall_difficulty": "hard",
        "visual_reasoning": true,
        "audio_reasoning": false,
        "multihop_reasoning": true,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 25
    },
    {
        "sites": [
            "reddit"
        ],
        "task_id": 86,
        "require_login": true,
        "storage_state": "./.auth/reddit_state.json",
        "start_url": "__REDDIT__",
        "geolocation": null,
        "intent_template": "The person in the video {description}. Can you {description2}.",
        "intent": "The person in the video clicks on a forum. Can you take me to the forum right above it?",
        "intermediate_intent": "What was the forum of the post that the person clicked on?",
        "video": "edit_post",
        "instantiation_dict": {
            "description": "clicks on a forum",
            "description2": "take me to the forum right above it"
        },
        "require_reset": false,
        "intermediate_eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Washington"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        },
        "eval": {
            "eval_types": [
                "url_match"
            ],
            "reference_answers": null,
            "reference_url": "__REDDIT__/f/wallstreetbets",
            "program_html": [],
            "url_note": "EXACT"
        },
        "intermediate_difficulty": "easy",
        "overall_difficulty": "easy",
        "visual_reasoning": true,
        "audio_reasoning": true,
        "multihop_reasoning": false,
        "temporal_reasoning": false,
        "comments": "",
        "intent_template_id": 4
    }
]
